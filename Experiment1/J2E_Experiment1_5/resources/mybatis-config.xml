<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">

<!-- 通过这个配置文件完成mybatis与数据库的连接 -->
<configuration>
	<!-- 引入 database.properties 文件
	<properties resource="database.properties"/>
	-->
	<!-- 改造2：更改properties元素对于数据库信息的配置方式设置为直接配置xml，
	并使用这些属性对配置项实现动态配置，观察resource属性值和property子节点配置的优先级 -->
	<!-- resource属性值的优先级高于property子节点配置的属性值 -->
	<properties resource="database.properties">
		<property name="driver" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/smbms"/>
		<property name="user" value="root"/>
		<property name="password" value="incorrectPassword"/>
	</properties>
	
	<!-- 配置mybatis的log实现为LOG4J -->
	<settings>
		<setting name="logImpl" value="LOG4J" />
	</settings>
	
	<!-- 改造3：使用typeAliases元素给POJO增加类型别名 -->
	<typeAliases>
		<typeAlias alias="Provider" type="cn.smbms.pojo.Provider" />
	</typeAliases>
	
	<!-- 改造1：将开发环境切换到测试环境 -->
	<environments default="test">
		<environment id="development">
			<!--配置事务管理，采用JDBC的事务管理  -->
			<transactionManager type="JDBC"></transactionManager>
			<!-- POOLED:mybatis自带的数据源，JNDI:基于tomcat的数据源 -->
			<dataSource type="POOLED">
				<property name="driver" value="${driver}"/>
				<property name="url" value="${url}"/>
				<property name="username" value="${user}"/>
				<property name="password" value="${password}"/>
			</dataSource>
		</environment>
		<!-- 改造1：增加数据库测试运行环境 -->
		<environment id="test">
			<!--配置事务管理，采用JDBC的事务管理  -->
			<transactionManager type="JDBC"></transactionManager>
			<!-- POOLED:mybatis自带的数据源，JNDI:基于tomcat的数据源 -->
			<dataSource type="POOLED">
				<property name="driver" value="${driver}"/>
				<property name="url" value="${url}"/>
				<property name="username" value="${user}"/>
				<property name="password" value="${password}"/>
			</dataSource>
		</environment>
	</environments>
	
	<!-- 将mapper文件加入到配置文件中 
	<mappers>
		<mapper resource="cn/smbms/dao/provider/ProviderMapper.xml"/>
	</mappers>
	-->
	<!-- 改造4对于mappers元素，使用URL方式来获取SQL映射文件 -->
	<mappers>
		<mapper url="file:///E:/MyEclipse/Workspaces/MyEclipse 10/J2E_Experiment1_5/src/cn/smbms/dao/provider/ProviderMapper.xml" />
	</mappers>


</configuration>
